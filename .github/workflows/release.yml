name: Create Release

# Definiere Berechtigungen für alle Jobs
permissions:
  contents: write  # Für Releases und Pushes
  packages: write  # Falls Sie auch Packages verwenden
  issues: write    # Falls Sie Release-Notes in Issues referenzieren

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths-ignore:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, xml
          tools: composer:v2

      - name: PHP Lint
        run: |
          find . -name "*.php" -exec php -l {} \;

      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="1.0.10"  # Default Version wenn kein Tag
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Update version in plugin file
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          sed -i "s/Version: .*$/Version: $VERSION/" newcustomer-discount.php
          sed -i "s/define('NCD_VERSION',.*/define('NCD_VERSION', '$VERSION');/" newcustomer-discount.php

      - name: Update readme.txt
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          if [ -f "readme.txt" ]; then
            sed -i "s/Stable tag: .*$/Stable tag: $VERSION/" readme.txt
          fi

      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"* %s (%h)" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" --no-merges)
          fi
          
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create ZIP archive
        run: |
          mkdir -p temp/newcustomer-discount
          rsync -av --exclude='.git*' --exclude='.github' --exclude='temp' --exclude='tests' --exclude='node_modules' . temp/newcustomer-discount/
          cd temp
          zip -r ../newcustomer-discount-wp-plugin.zip newcustomer-discount
          cd ..
          rm -rf temp

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: newcustomer-discount-wp-plugin.zip
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            Änderungen in diesem Release:
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ### Automatisch generierter Release
            
            Diese Version enthält:
            * Plugin Version: ${{ steps.version.outputs.VERSION }}
            * Generiert am: ${{ steps.version.outputs.DATE }}
            
            ### Installation
            1. Laden Sie die ZIP-Datei herunter
            2. Gehen Sie in Ihrem WordPress-Dashboard zu Plugins > Installieren
            3. Klicken Sie auf "Plugin hochladen"
            4. Wählen Sie die heruntergeladene ZIP-Datei aus
            5. Klicken Sie auf "Jetzt installieren"
            6. Aktivieren Sie das Plugin
          draft: false
          prerelease: false

      - name: Push changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add -A
            git commit -m "chore: update version to ${{ steps.version.outputs.VERSION }}"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          rm -f newcustomer-discount-wp-plugin.zip